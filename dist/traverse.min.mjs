var e={d:(t,s)=>{for(var o in s)e.o(s,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:s[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},t={};e.d(t,{A:()=>o});const s=new WeakMap;function o(e){return s.get(e)??function(e){let t=1;class o{static NONE=0;static EXTERNPROTO_DECLARATIONS=t;static PROTO_DECLARATIONS=t<<=1;static ROOT_NODES=t<<=1;static IMPORTED_NODES=t<<=1;static EXTERNPROTO_DECLARATION_SCENE=t<<=1;static PROTO_DECLARATION_BODY=t<<=1;static PROTOTYPE_INSTANCES=t<<=1;static INLINE_SCENE=t<<=1;static ALL=(t<<1)-1;static traverse(t,s=this.NONE){const o=new Set;switch(!0){case t instanceof e.X3DExecutionContext:return this.#e(t,s,o);case t instanceof e.ExternProtoDeclarationArray:case t instanceof e.ProtoDeclarationArray:case t instanceof e.MFNode:case Array.isArray(t):return this.#t(t,s,o);case t instanceof e.SFNode:return this.#s(t.getValue(),s,o);case t instanceof e.X3DBaseNode:return this.#s(t,s,o)}}static*#e(e,t,s){if(e){if(t&o.EXTERNPROTO_DECLARATIONS)for(const o of e.externprotos)yield*this.#s(o,t,s);if(t&o.PROTO_DECLARATIONS)for(const o of e.protos)yield*this.#s(o,t,s);t&o.ROOT_NODES&&(yield*this.#t(e.rootNodes,t,s)),yield e}}static*#t(t,s,o){for(const n of t)yield*this.#s(n instanceof e.SFNode?n.getValue():n,s,o)}static*#s(t,s,n){if(!t)return;if(n.has(t))return;n.add(t),yield*this.#o(t.getUserDefinedFields(),s,n),yield*this.#o(t.getPredefinedFields(),s,n);const r=t.getType();for(let i=r.length-1;i>=0;--i){switch(r[i]){case e.X3DConstants.X3DExternProtoDeclaration:s&this.EXTERNPROTO_DECLARATION_SCENE&&(yield*this.#e(t.getInternalScene(),s,n));break;case e.X3DConstants.X3DProtoDeclaration:s&o.PROTO_DECLARATION_BODY&&(yield*this.#e(t.getBody(),s,n));break;case e.X3DConstants.X3DPrototypeInstance:s&o.PROTOTYPE_INSTANCES&&(yield*this.#e(t.getBody(),s,n));break;case e.X3DConstants.Inline:s&this.INLINE_SCENE&&(yield*this.#e(t.getInternalScene(),s,n));break;default:continue}break}yield t instanceof e.X3DNode?e.SFNodeCache.get(t):t}static*#o(t,s,o){for(const n of t)switch(n.getType()){case e.X3DConstants.SFNode:yield*this.#s(n.getValue(),s,o);break;case e.X3DConstants.MFNode:yield*this.#t(n,s,o)}}static find(t,s,o=this.NONE){const n=new Set;return s instanceof e.SFNode&&s===e.SFNodeCache.get(s.getValue())&&(s=s.getValue()),this.#n(t,s,o,[],n)}static*#n(e,t,s,o,n){if(e){if(o.push(e),e===t)yield o.slice();else{if(s&this.EXTERNPROTO_DECLARATIONS){const r=e.getExternProtoDeclarations();o.push("externprotos");for(const[e,i]of r.entries())yield*this.#r(i,t,s,o,n),o.pop();o.pop()}if(s&this.PROTO_DECLARATIONS){const r=e.getProtoDeclarations();o.push("protos");for(const[e,i]of r.entries())o.push(e),yield*this.#r(i,t,s,o,n),o.pop();o.pop()}if(s&this.ROOT_NODES){const r=e.getRootNodes();o.push("rootNodes");for(const[e,i]of r.entries())o.push(e),yield*this.#r(i.getValue(),t,s,o,n),o.pop();o.pop()}if(s&this.IMPORTED_NODES){o.push("importedNodes");for(const[r,i]of e.getImportedNodes().entries()){if(o.push(r),o.push(i),i===t)yield o.slice();else try{const e=i.getExportedNode();yield*this.#r(e,t,s,o,n)}catch(e){}o.pop(),o.pop()}o.pop()}}o.pop()}}static*#r(t,s,o,n,r){if(t&&!r.has(t)){if(r.add(t),n.push(t instanceof e.X3DNode?e.SFNodeCache.get(t):t),t.valueOf()===s.valueOf())yield n.slice();else{t.getType().includes(e.X3DConstants.X3DExternProtoDeclaration)||(yield*this.#i(t.getUserDefinedFields(),s,o,n,r),yield*this.#i(t.getPredefinedFields(),s,o,n,r));const i=t.getType();for(let a=i.length-1;a>=0;--a)switch(i[a]){case e.X3DConstants.X3DExternProtoDeclaration:o&this.EXTERNPROTO_DECLARATION_SCENE&&(yield*this.#n(t.getInternalScene(),s,o,n,r));break;case e.X3DConstants.X3DProtoDeclaration:o&this.PROTO_DECLARATION_BODY&&(yield*this.#n(t.getBody(),s,o,n,r));break;case e.X3DConstants.X3DPrototypeInstance:o&this.PROTOTYPE_INSTANCES&&(yield*this.#n(t.getBody(),s,o,n,r));break;case e.X3DConstants.Inline:o&this.INLINE_SCENE&&(yield*this.#n(t.getInternalScene(),s,o,n,r))}}n.pop(),r.delete(t)}}static*#i(t,s,o,n,r){for(const i of t){if(n.push(i.getName()),i===s)yield n.slice();else switch(i.getType()){case e.X3DConstants.SFNode:yield*this.#r(i.getValue(),s,o,n,r);break;case e.X3DConstants.MFNode:for(const[e,t]of i.entries())n.push(e),yield*this.#r(t?.getValue(),s,o,n,r),n.pop()}n.pop()}}}return e.X3DExecutionContext.prototype.traverse=function(e=o.ROOT_NODES){return o.traverse(this,e)},e.X3DExternProtoDeclaration.prototype.traverse=function(e){return o.traverse(this,e)},e.X3DProtoDeclaration.prototype.traverse=function(e){return o.traverse(this,e)},e.ExternProtoDeclarationArray.prototype.traverse=function(e=o.EXTERNPROTO_DECLARATIONS){return o.traverse(this,e)},e.ProtoDeclarationArray.prototype.traverse=function(e=o.PROTO_DECLARATIONS){return o.traverse(this,e)},e.SFNode.prototype.traverse=function(e){return o.traverse(this,e)},e.MFNode.prototype.traverse=function(e){return o.traverse(this,e)},e.X3DExecutionContext.prototype.find=function(e,t=o.ROOT_NODES){return o.find(this,e,t)},s.set(e,o),o}(e)}var n=t.A;export{n as default};